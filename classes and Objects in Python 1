class MyClass:
  x = 8
p1 = MyClass()
print(p1.x)
# Queue
class Queue:
  def __init__(self):
    self.queue = list()
  def addtoq(self, dataval):
   if dataval not in self.queue:
    self.queue.insert(0, dataval)
    return True
    return False

  def size(self):
    return len(self.queue)


TheQueue = Queue()
TheQueue.addtoq("Mon")
TheQueue.addtoq("Tue")
TheQueue.addtoq("Wed")
print(TheQueue.size())


class ap:
  pass


class person:
  age = 10

  def greet(self):
    print("hello")


obj = person()
print(obj.age)
obj.greet()


class MG:
  def __init__(self, name, age):
    self.name = name
    self.age = age

  def show(self):
    print("name =" + self.name)
    print("age =", self.age)


obj1 = MG("kumawat", 20)
obj1.show()

#stack
class Stack:
  def __init__(self):
    self.stack = []
  def add(self, dataval):
    if dataval not in self.stack:
      self.stack.append(dataval)
      return True
    else:
      return False
  def peek(self):
    return self.stack[-1]
AStack = Stack()
AStack.add("Mon")
AStack.add("Tue")
AStack.peek()
print(AStack.peek())
AStack.add("Wed")
AStack.add("Thu")
print(AStack.peek())
queue

class Queue:

	def __init__(self):
		self.elements = []

	def enqueue(self, data):
		self.elements.append(data)
		return data

	def dequeue(self):
		return self.elements.pop(0)

	def rear(self):
		return self.elements[-1]

	def front(self):
		return self.elements[0]

	def is_empty(self):
		return len(self.elements) == 0

if __name__ == '__main__':
	queue = Queue()

 
	print(queue.is_empty())

	 
	queue.enqueue(1)
	queue.enqueue(2)
	queue.enqueue(3)
	queue.enqueue(4)
	queue.enqueue(5)
 
	print(queue.is_empty())

	 
	print(queue.front(), end=' ')
	print(queue.rear())

 
	queue.dequeue()

	 
	print(queue.front(), end=' ')
	print(queue.rear())

 
	queue.dequeue()
	queue.dequeue()
	queue.dequeue()
	queue.dequeue()
	print(queue.is_empty())
